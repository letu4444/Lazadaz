package Lazadar.config.authori;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.oauth2.core.oidc.OidcIdToken;
import org.springframework.security.oauth2.core.oidc.user.OidcUser;
import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;
import org.springframework.security.web.savedrequest.HttpSessionRequestCache;
import org.springframework.security.web.savedrequest.RequestCache;
import org.springframework.security.web.savedrequest.SavedRequest;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

import Lazadar.config.PasswordConfig;
import Lazadar.model.UserCredential;
import Lazadar.repository.RoleRepository;
import Lazadar.repository.UserCredenRepository;
import Lazadar.services.AuthService;
import Lazadar.uitl.Next;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;



@Component
public class OAuth2LoginSuccessHandler extends SimpleUrlAuthenticationSuccessHandler implements AuthenticationSuccessHandler{
	
	

	
	@Autowired
	private UserCredenRepository credenRepository;
	
	@Autowired
	private AuthService authService;
	
	@Autowired
	private RoleRepository repository;
	
	@Autowired
	private Next next;
	
	@Autowired
	private PasswordConfig passwordConfig;

	
	private RequestCache requestCache = new HttpSessionRequestCache();

	
	
	public OAuth2LoginSuccessHandler() {
		super();
		 setUseReferer(true);
	}



	@Override
	public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
			Authentication authentication) throws IOException, ServletException {
		String redirectUrl ="";
		// đây để kiểm tra xem Security có tên code là gì rồi xét cho nó vào được đâu
		// Nếu nó là bên bán hàng thì đk vào bên bán hàng //Nếu nó là user thì chỉ đk
		// vào mua hàng
		//Kiểm tra xem họ đăng nhập bằg hình thức nào
		  // Debug: in ra thông tin về request
	    System.out.println("Request URL: " + request.getRequestURL());
	    HttpSession session = request.getSession();
	    System.out.println("Request trc URL: " + session);
		SavedRequest savedRequest = this.requestCache.getRequest(request, response);
		String targetUrl2 = savedRequest.getRedirectUrl();
		if(authentication.getPrincipal().getClass() == CustomOauth2User.class) {
			 OidcUser oidcUser = (OidcUser) authentication.getPrincipal();
             OidcIdToken idToken = oidcUser.getIdToken();
             String idTokenValue = idToken.getTokenValue();
			CustomOauth2User oauth2User = (CustomOauth2User) authentication.getPrincipal();
			String oauth2ClientName = oauth2User.getOauth2ClientName();
			UserCredential userCredential = oauth2User.getCredential();
			if(credenRepository.findByEmail(userCredential.getEmail()) == null) {
				userCredential.setPassword(passwordConfig.passwordEncoder().encode("anhtu1996"));
				userCredential.setRoles(new HashSet<>(Arrays.asList(repository.findByCode("user"))));
				credenRepository.save(userCredential);
				if (savedRequest == null) {
					super.onAuthenticationSuccess(request, response, authentication);
					return;
				}
			
             }else {
            	 if (savedRequest == null) {
						super.onAuthenticationSuccess(request, response, authentication);
						return;
					}
			}
		}
		
		else{
		
		
		String targetUrlParameter = getTargetUrlParameter();
		if (isAlwaysUseDefaultTargetUrl()
				|| (targetUrlParameter != null && StringUtils.hasText(request.getParameter(targetUrlParameter)))) {
			this.requestCache.removeRequest(request, response);
			super.onAuthenticationSuccess(request, response, authentication);
			return;
		}
		clearAuthenticationAttributes(request);
		// Use the DefaultSavedRequest URL
	    // Debug: in ra thông tin về saved request
	    System.out.println("Saved request URL: " + savedRequest.getRedirectUrl());
		String targetUrl = "/trangchu";
		getRedirectStrategy().sendRedirect(request, response, targetUrl);
		}
		
	}
	public void setRequestCache(RequestCache requestCache) {
		this.requestCache = requestCache;
	}
}
